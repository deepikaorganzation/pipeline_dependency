name: Deploy ADF Pipelines

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-adf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: >
                {
                  "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
                  "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
                  "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
                  "tenantId":"${{ secrets.AZURE_TENANT_ID }}"
                }
          enable-AzPSSession: true

      - name: Read Pipeline Dependencies
        id: dependencies
        run: |
          echo "PIPELINE_DEPENDENCIES=$(jq -c . dependencies.json)" >> $GITHUB_ENV

      - name: Deploy ADF Instance
        run: |
          az deployment group create \
            --resource-group my-resource-group \
            --template-file main.bicep \
            --parameters adfName=my-adf

      - name: Deploy Pipelines in Order
        run: |
          dependencies='${{ env.PIPELINE_DEPENDENCIES }}'
          deployed=()

          deploy_pipeline() {
            local pipeline=$1
            if [[ " ${deployed[@]} " =~ " $pipeline " ]]; then
              echo "$pipeline already deployed."
              return
            fi
            for dep in $(echo $dependencies | jq -r ".[\"$pipeline\"][]"); do
              deploy_pipeline $dep
            done
            echo "Deploying $pipeline..."
            az datafactory pipeline create --factory-name my-adf --resource-group my-resource-group \
              --name $pipeline --pipeline "$(cat pipelines/$pipeline.json)"
            deployed+=("$pipeline")
          }

          for pipeline in $(echo $dependencies | jq -r 'keys[]'); do
            deploy_pipeline $pipeline
          done
