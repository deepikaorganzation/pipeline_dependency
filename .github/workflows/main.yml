name: Deploy ADF Pipelines

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-adf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: >
                {
                  "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
                  "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
                  "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
                  "tenantId":"${{ secrets.AZURE_TENANT_ID }}"
                }
          enable-AzPSSession: true

      - name: Debug Azure Login
        run: az account show

      - name: Read Pipeline Dependencies
        id: dependencies
        run: |
          echo "PIPELINE_DEPENDENCIES=$(jq -c . dependencies.json)" >> $GITHUB_ENV
          echo "LINKED_SERVICE_DEPENDENCIES=$(jq -c . linkedServiceDependency.json)" >> $GITHUB_ENV

      - name: Deploy ADF Instance
        run: |
          az deployment group create \
            --resource-group komatsu-poc \
            --template-file main.bicep \
            --parameters adfName=komatsu-test-poc

      - name: Deploy Pipelines in Order
        run: |
          dependencies='${{ env.PIPELINE_DEPENDENCIES }}'
          deployed=()

          deploy_pipeline() {
            local pipeline=$1
            if [[ " ${deployed[@]} " =~ " $pipeline " ]]; then
              echo "$pipeline already deployed."
              return
            fi
            for dep in $(echo $dependencies | jq -r ".[\"$pipeline\"][]"); do
              deploy_pipeline $dep
            done
            echo "Deploying $pipeline..."
            az datafactory pipeline create --factory-name komatsu-test-poc --resource-group komatsu-poc \
              --name $pipeline --pipeline "$(cat pipeline/$pipeline.json)"
            deployed+=("$pipeline")
          }

          for pipeline in $(echo $dependencies | jq -r 'keys[]'); do
            deploy_pipeline $pipeline
          done

      - name: Deploy Linked Services in Order
        run: |
          linked_services='${{ env.LINKED_SERVICE_DEPENDENCIES }}'
          deployed=()
  
          deploy_linked_service() {
            local linked_service=$1
            if [[ " ${deployed[@]} " =~ " $linked_service " ]]; then
              echo "$linked_service already deployed."
              return
            fi
            # Deploy dependencies first
            for dep in $(echo $linked_services | jq -r ".[\"$linked_service\"][]"); do
              deploy_linked_service $dep
            done
            echo "Deploying Linked Service: $linked_service..."
            az datafactory linked-service create --factory-name komatsu-test-poc --resource-group komatsu-poc \
              --name $linked_service --properties "$(cat linkedService/$linked_service.json)"
            deployed+=("$linked_service")
          }
  
          for linked_service in $(echo $linked_services | jq -r 'keys[]'); do
            deploy_linked_service $linked_service
          done
