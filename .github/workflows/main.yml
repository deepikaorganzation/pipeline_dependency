name: Deploy ADF Pipelines

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-adf:
    env:
        ENV_VAR: "staging"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: >
                {
                  "clientId":"${{ secrets.AZURE_CLIENT_ID }}",
                  "clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}",
                  "subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}",
                  "tenantId":"${{ secrets.AZURE_TENANT_ID }}"
                }
          enable-AzPSSession: true

      - name: Debug Azure Login
        run: az account show

      - name: Read Pipeline Dependencies
        id: dependencies
        run: |
          echo "PIPELINE_DEPENDENCIES=$(jq -c . dependencies.json)" >> $GITHUB_ENV
          echo "LINKED_SERVICE_DEPENDENCIES=$(jq -c . linkedServiceDependency.json)" >> $GITHUB_ENV

      - name: Deploy ADF Instance
        run: |
          az deployment group create \
            --resource-group komatsu-poc \
            --template-file main.bicep \
            --parameters adfName=komatsu-test-poc

      - name: Extract Pipeline Order from JSON
        id: get_pipeline_order
        run: |
          PIPELINES=$(jq -c '.pipelines | sort_by(.dependsOn | length)' dependencies.json)
          echo "PIPELINES=$PIPELINES" >> $GITHUB_ENV

      - name: Deploy Pipelines in Order
        run: |
          for row in $(echo "$PIPELINES" | jq -c '.[]'); do
            PIPELINE_NAME=$(echo "$row" | jq -r '.name')
            NEW_NAME=$(jq -r --arg env "$ENV_VAR" --arg pipeline "$PIPELINE_NAME" \
              '.name | sub("dev|qa|uat|prod"; $env; "g")' pipeline/"$PIPELINE_NAME".json)
            echo "Deploying $PIPELINE_NAME..."
            az deployment group create \
              --resource-group komatsu-poc \
              --template-file pipeline.bicep \
              --parameters factoryName=komatsu-test-poc pipelineName=$NEW_NAME
          done

      - name: Extract Linked Service Order from JSON
        id: get_linked_service_order
        run: |
          LINKED_SERVICES=$(jq -c '.linkedServices | sort_by(.dependsOn | length)' dependencies.json)
          echo "LINKED_SERVICES=$LINKED_SERVICES" >> $GITHUB_ENV

      - name: Deploy Linked Services in Order
        run: |
          for row in $(echo "$LINKED_SERVICES" | jq -c '.[]'); do
            LINKED_SERVICE_NAME=$(echo "$row" | jq -r '.name')
            
            # Modify the name dynamically based on the environment
            NEW_NAME_LS=$(jq -r --arg env "$ENV_VAR" --arg name "$LINKED_SERVICE_NAME" \
              '.name | sub("dev|qa|uat|prod"; $env; "g")' linkedService/"$LINKED_SERVICE_NAME".json)
            linkedService1=$(cat ./linkedService/"$LINKED_SERVICE_NAME".json)
            linkedServices=$(jq -n \
            --arg linkedService1 "$linkedService1" \
            '[ 
              {
                "name": "$NEW_NAME_LS", 
                "definition": $linkedService1 | fromjson  
              }
            ]')
            echo "Deploying Linked Service: $NEW_NAME_LS"

            az deployment group create \
              --resource-group komatsu-poc \
              --template-file linkedService.bicep \
              --parameters factoryName=komatsu-test-poc linkedServices=$linkedServices
          done
