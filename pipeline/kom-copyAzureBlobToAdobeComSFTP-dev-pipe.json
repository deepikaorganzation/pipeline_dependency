{
	"name": "kom-copyAzureBlobToAdobeComSFTP-dev-pipe",
	"properties": {
		"activities": [
			{
				"name": "ForEach_File_In_FileNameArray",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [
					{
						"name": "FileName",
						"value": "@item()"
					},
					{
						"name": "SourceSystem",
						"value": "@pipeline().parameters.source"
					},
					{
						"name": "TargetSystem",
						"value": "@pipeline().parameters.target"
					},
					{
						"name": "CustomMessage",
						"value": "Iterating over Files to be processed and Send To Adobe Com"
					},
					{
						"name": "Transaction",
						"value": "@pipeline().parameters.transaction"
					}
				],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.sourceAzureStorageBlobFileName",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_AzureStorageInbound_To_AdobeComSFTP",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 60,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Copy file from Inbound to Adobe Com sFTP"
								}
							],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item()",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "SftpWriteSettings",
										"operationTimeout": "01:00:00",
										"useTempFileRename": true
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().parameters.sourceAzureStorageContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_Adobe",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Delete_From_AzureStorageInbound_On_Success",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy_AzureStorageInbound_To_AdobeStorageOutbound",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Delete file from Inbound on Success"
								}
							],
							"typeProperties": {
								"dataset": {
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().parameters.sourceAzureStorageContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@item()",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Copy_AzureStorageInbound_To_AdobeStorageOutbound",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy_AzureStorageInbound_To_AdobeComSFTP",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Copy file from Inbound to Outbound"
								}
							],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item()",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().parameters.sourceAzureStorageContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().globalParameters.outboundAzureStorageBlobContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Copy_AzureStorageInbound_To_AdobeStorageError",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy_AzureStorageInbound_To_AdobeComSFTP",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Copy file from Inbound to Error"
								}
							],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@item()",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().parameters.sourceAzureStorageContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().globalParameters.errorAzureStorageBlobContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@concat('connectivity//',pipeline().parameters.sourceAzureStorageBlobFilePath)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete_From_AzureStorageInbound_On_Error",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy_AzureStorageInbound_To_AdobeStorageError",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Delete file from Inbound on Error"
								}
							],
							"typeProperties": {
								"dataset": {
									"referenceName": "dsPIM_Adobe_Export_AzureBlob",
									"type": "DatasetReference",
									"parameters": {
										"dsAzureBlobContainer": {
											"value": "@pipeline().parameters.sourceAzureStorageContainer",
											"type": "Expression"
										},
										"dsAzureBlobPath": {
											"value": "@pipeline().parameters.sourceAzureStorageBlobFilePath",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@item()",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Send_ErrorEmail_On_AdobeComSFTP_ConnectivityIssue",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Get_EmailIds",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "FileName",
									"value": "@item()"
								},
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transaction"
								},
								{
									"name": "SourceSystem",
									"value": "@pipeline().parameters.source"
								},
								{
									"name": "TargetSystem",
									"value": "@pipeline().parameters.target"
								},
								{
									"name": "CustomMessage",
									"value": "Send email on Failure of Copy file to Adobe Com sFTP"
								}
							],
							"typeProperties": {
								"method": "POST",
								"url": {
									"value": "@pipeline().globalParameters.httpsUrlForEmail",
									"type": "Expression"
								},
								"body": {
									"value": "@concat('{\n  \"attachments\": [\n    {\n      \"contentData\": \"\",\n      \"contentId\": \"\",\n      \"contentType\": \"\",\n      \"fileName\": \"\"\n    }\n  ],\n  \"bodyText\": \"FileName:',item(),' , Source: PIM, Target: Adobe Commerce SFTP folder \"pim_import_drop\"','ReceivedAt:', pipeline().parameters.mainPipelineStartTime,', could not be delivered to the target at', utcNow(), 'due to connection issue with Adobe Commerce SFTP Path. It will be processed once issue is resolved. Error:',if(contains(string(activity('Copy_AzureStorageInbound_To_AdobeComSFTP').output), 'errors'), activity('Copy_AzureStorageInbound_To_AdobeComSFTP').output.errors[0].Message, 'Issue connecting to SFTP'),'\",\n  \"ccEmailAddress\": \"',activity('Get_EmailIds').output.firstRow.CcEmailIds,'\",\n  \"fromEmailAddress\": \"',pipeline().globalParameters.fromEmailAddress,'\",\n  \"subject\": \"Error in ',pipeline().globalParameters.environment,': Unable to Connect Adobe Commerce SFTP Path\",\n  \"toEmailAddresses\": \"',activity('Get_EmailIds').output.firstRow.ToEmailIds,'\"}')",
									"type": "Expression"
								},
								"authentication": {
									"type": "ServicePrincipal",
									"userTenant": "58be8688-6625-4e52-80d8-c17f3a9ae08a",
									"username": "fc39e7d0-e6f1-42ec-9e2f-b1c8392479e1",
									"resource": "fc39e7d0-e6f1-42ec-9e2f-b1c8392479e1",
									"password": {
										"type": "AzureKeyVaultSecret",
										"store": {
											"referenceName": "lsAzureKeyVault",
											"type": "LinkedServiceReference"
										},
										"secretName": "notification-emailservice-secret"
									}
								}
							}
						},
						{
							"name": "Get_EmailIds",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Copy_AzureStorageInbound_To_AdobeComSFTP",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureTableSource",
									"azureTableSourceQuery": {
										"value": "PartitionKey eq '@{pipeline().parameters.flowName}'",
										"type": "Expression"
									},
									"azureTableSourceIgnoreTableNotFound": false
								},
								"dataset": {
									"referenceName": "dsEmail_AzureTableStorage_01",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						}
					]
				}
			}
		],
		"parameters": {
			"sourceAzureStorageBlobFilePath": {
				"type": "string"
			},
			"sourceAzureStorageBlobFileName": {
				"type": "array"
			},
			"mainPipelineStartTime": {
				"type": "string"
			},
			"sourceAzureStorageContainer": {
				"type": "string"
			},
			"source": {
				"type": "string"
			},
			"target": {
				"type": "string"
			},
			"transaction": {
				"type": "string"
			},
			"flowName": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-12-11T07:18:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}