{
	"name": "kom-pimAdobeExport-dev-pipe",
	"properties": {
		"activities": [
			{
				"name": "GetMetadata_PIMAWSS3",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Transaction",
						"value": "@pipeline().parameters.transactionName"
					},
					{
						"name": "SourceSystem",
						"value": "pim"
					},
					{
						"name": "TargetSystem",
						"value": "com"
					},
					{
						"name": "CustomMessage",
						"value": "Getting File Metadata from PIMAWSS3 Path"
					}
				],
				"typeProperties": {
					"dataset": {
						"referenceName": "dsPIM_Adobe_Export_PIM",
						"type": "DatasetReference",
						"parameters": {
							"dsAwsS3BucketName": {
								"value": "@pipeline().parameters.awsS3SourceBucketName",
								"type": "Expression"
							},
							"dsAwsS3FilePath": {
								"value": "@pipeline().parameters.awsS3SourceFilePath",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AmazonS3ReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "ForEach_File_In_PIMAWSS3",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetMetadata_PIMAWSS3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [
					{
						"name": "Transaction",
						"value": "@pipeline().parameters.transactionName"
					},
					{
						"name": "SourceSystem",
						"value": "pim"
					},
					{
						"name": "TargetSystem",
						"value": "com"
					},
					{
						"name": "CustomMessage",
						"value": "Looping through Each File In PIMAWSS3 for matching files"
					}
				],
				"typeProperties": {
					"items": {
						"value": "@activity('GetMetadata_PIMAWSS3').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If_FileExistsAndMatchesWildcardPattern",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transactionName"
								},
								{
									"name": "SourceSystem",
									"value": "pim"
								},
								{
									"name": "TargetSystem",
									"value": "com"
								},
								{
									"name": "CustomMessage",
									"value": "Matching File  Exists In PIMAWSS3"
								}
							],
							"typeProperties": {
								"expression": {
									"value": "@and(equals(item().type,\n'File'\n),startswith(toUpper(item().name),toUpper(pipeline().parameters.awsS3SourceFileName)))\n",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Copy_PIMAWS3_To_AdobeStorageInbound",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 3,
											"retryIntervalInSeconds": 60,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "FileName",
												"value": "@item().name"
											},
											{
												"name": "Transaction",
												"value": "@pipeline().parameters.transactionName"
											},
											{
												"name": "CustomMessage",
												"value": "Copy File From PIMAWS3 To AdobeStorageInbound"
											},
											{
												"name": "SourceSystem",
												"value": "pim"
											},
											{
												"name": "TargetSystem",
												"value": "com"
											}
										],
										"typeProperties": {
											"source": {
												"type": "JsonSource",
												"storeSettings": {
													"type": "AmazonS3ReadSettings",
													"recursive": true,
													"wildcardFolderPath": {
														"value": "@pipeline().parameters.awsS3SourceFilePath",
														"type": "Expression"
													},
													"wildcardFileName": {
														"value": "@item().name",
														"type": "Expression"
													},
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "JsonReadSettings"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "dsPIM_Adobe_Export_PIM",
												"type": "DatasetReference",
												"parameters": {
													"dsAwsS3BucketName": {
														"value": "@pipeline().parameters.awsS3SourceBucketName",
														"type": "Expression"
													},
													"dsAwsS3FilePath": {
														"value": "@pipeline().parameters.awsS3SourceFilePath",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "dsPIM_Adobe_Export_AzureBlob",
												"type": "DatasetReference",
												"parameters": {
													"dsAzureBlobContainer": {
														"value": "@pipeline().globalParameters.inboundAzureStorageContainer",
														"type": "Expression"
													},
													"dsAzureBlobPath": {
														"value": "@pipeline().parameters.azureStorageBlobFilePath",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Delete_From_PIMAWSS3_On_Success",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "Copy_PIMAWS3_To_AdobeStorageInbound",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 3,
											"retryIntervalInSeconds": 60,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "FileName",
												"value": "@item().name"
											},
											{
												"name": "Transaction",
												"value": "@pipeline().parameters.awsS3SourceFileName"
											},
											{
												"name": "SourceSystem",
												"value": "pim"
											},
											{
												"name": "TargetSystem",
												"value": "com"
											},
											{
												"name": "CustomMessage",
												"value": "Delete File From PIMAWSS3"
											}
										],
										"typeProperties": {
											"dataset": {
												"referenceName": "dsPIM_Adobe_Export_PIM",
												"type": "DatasetReference",
												"parameters": {
													"dsAwsS3BucketName": {
														"value": "@pipeline().parameters.awsS3SourceBucketName",
														"type": "Expression"
													},
													"dsAwsS3FilePath": {
														"value": "@pipeline().parameters.awsS3SourceFilePath",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										}
									},
									{
										"name": "Append_FileName_To_ArrayVariable",
										"type": "AppendVariable",
										"dependsOn": [
											{
												"activity": "Delete_From_PIMAWSS3_On_Success",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [
											{
												"name": "FileName",
												"value": "@item().name"
											},
											{
												"name": "Transaction",
												"value": "@pipeline().parameters.transactionName"
											},
											{
												"name": "SourceSystem",
												"value": "pim"
											},
											{
												"name": "TargetSystem",
												"value": "com"
											},
											{
												"name": "CustomMessage",
												"value": "Add FileName To Array Variable"
											}
										],
										"typeProperties": {
											"variableName": "successFileNameArr",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "If_Files_Exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach_File_In_PIMAWSS3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [
					{
						"name": "Transaction",
						"value": "@pipeline().parameters.transactionName"
					},
					{
						"name": "SourceSystem",
						"value": "pim"
					},
					{
						"name": "TargetSystem",
						"value": "com"
					},
					{
						"name": "CustomMessage",
						"value": "Check if Files Exist for Transmission to Adobe Commerce"
					}
				],
				"typeProperties": {
					"expression": {
						"value": "@not(empty(variables('successFileNameArr')))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "ExecutePipeline_copyAzureBlobToAdobeComSFTP",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Transaction",
									"value": "@pipeline().parameters.transactionName"
								},
								{
									"name": "SourceSystem",
									"value": "pim"
								},
								{
									"name": "TargetSystem",
									"value": "com"
								},
								{
									"name": "CustomMessage",
									"value": "ExecutePipeline copyAzureBlobToAdobeComSFTP"
								}
							],
							"typeProperties": {
								"pipeline": {
									"referenceName": "kom-copyAzureBlobToAdobeComSFTP-dev-pipe",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceAzureStorageBlobFilePath": {
										"value": "@pipeline().parameters.azureStorageBlobFilePath",
										"type": "Expression"
									},
									"sourceAzureStorageBlobFileName": {
										"value": "@variables('successFileNameArr')",
										"type": "Expression"
									},
									"mainPipelineStartTime": {
										"value": "@pipeline().TriggerTime\r\n",
										"type": "Expression"
									},
									"sourceAzureStorageContainer": {
										"value": "@pipeline().globalParameters.inboundAzureStorageContainer",
										"type": "Expression"
									},
									"source": "pim",
									"target": "com",
									"transaction": {
										"value": "@pipeline().parameters.transactionName",
										"type": "Expression"
									},
									"flowName": {
										"value": "@pipeline().parameters.awsS3SourceFileName",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Send_ErrorEmail_On_PIMAWSS3_ConnectivityIssue",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get_EmailIds",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Transaction",
						"value": "@pipeline().parameters.transactionName"
					},
					{
						"name": "SourceSystem",
						"value": "pim"
					},
					{
						"name": "TargetSystem",
						"value": "com"
					},
					{
						"name": "CustomMessage",
						"value": "Send ErrorEmail On PIMAWSS3 ConnectivityIssue"
					}
				],
				"typeProperties": {
					"method": "POST",
					"url": {
						"value": "@pipeline().globalParameters.httpsUrlForEmail",
						"type": "Expression"
					},
					"body": {
						"value": "@concat('{\n  \"attachments\": [\n    {\n      \"contentData\": \"\",\n      \"contentId\": \"\",\n      \"contentType\": \"\",\n      \"fileName\": \"\"\n    }\n  ],\n  \"bodyText\": \"File from Source: PIM AWS S3 could not be received at ',pipeline().TriggerTime ,'due to connection issue with PIM AWS S3 Path. It will be retried once issue is resolved. Error:',if(contains(string(activity('GetMetadata_PIMAWSS3').output), 'errors'),activity('GetMetadata_PIMAWSS3').output.errors[0].Message, 'Issue Connecting S3 Bucket'),'\",\n  \"ccEmailAddress\": \"',activity('Get_EmailIds').output.firstRow.CcEmailIds,'\",\n  \"fromEmailAddress\": \"',pipeline().globalParameters.fromEmailAddress,'\",\n  \"subject\": \"Error in ',pipeline().globalParameters.environment,': Unable to Connect PIM AWS S3 Path\",\n  \"toEmailAddresses\": \"',activity('Get_EmailIds').output.firstRow.ToEmailIds,'\"}')",
						"type": "Expression"
					},
					"authentication": {
						"type": "ServicePrincipal",
						"userTenant": "58be8688-6625-4e52-80d8-c17f3a9ae08a",
						"username": "fc39e7d0-e6f1-42ec-9e2f-b1c8392479e1",
						"resource": "fc39e7d0-e6f1-42ec-9e2f-b1c8392479e1",
						"password": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "lsAzureKeyVault",
								"type": "LinkedServiceReference"
							},
							"secretName": "notification-emailservice-secret"
						}
					}
				}
			},
			{
				"name": "Get_EmailIds",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetMetadata_PIMAWSS3",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureTableSource",
						"azureTableSourceQuery": {
							"value": "PartitionKey eq '@{pipeline().parameters.awsS3SourceFileName}'",
							"type": "Expression"
						},
						"azureTableSourceIgnoreTableNotFound": false
					},
					"dataset": {
						"referenceName": "dsEmail_AzureTableStorage_01",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"awsS3SourceFileName": {
				"type": "string"
			},
			"awsS3SourceFilePath": {
				"type": "string"
			},
			"awsS3SourceBucketName": {
				"type": "string"
			},
			"azureStorageBlobFilePath": {
				"type": "string"
			},
			"transactionName": {
				"type": "string"
			}
		},
		"variables": {
			"successFileNameArr": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-12-11T07:18:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}